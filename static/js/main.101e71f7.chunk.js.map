{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","resources/img/thor.jpeg","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffSet","getResource","URL","fetch","res","ok","Error","status","json","getAllCharacters","a","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","homepage","urls","wiki","url","thumbnail","path","extension","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","textAlign","fontSize","RandomChar","state","loading","error","marvelService","onCharLoaded","length","about","split","slice","push","join","setState","onError","updateChar","Math","floor","random","max","then","catch","this","errorMessage","spinner","content","onClick","src","mjolnir","alt","Component","View","objectFit","change","CharList","chars","newItemLoading","charsEnded","onRequest","onCharsListLoading","onCharsLoaded","newCharList","ended","contentChars","item","props","onCharSelected","contentSpinners","Array","i","contentErrors","contentToShow","buttonContent","disabled","Skeleton","CharInfo","charId","onCharLoading","prevProps","err","info","console","log","skeleton","ErrorBoundary","errorInfo","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.101e71f7.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","export default __webpack_public_path__ + \"static/media/thor.533e3a5e.jpeg\";","class MarvelService {\r\n    _apiBase = `https://gateway.marvel.com:443/v1/public/characters`\r\n    _apiKey = `apikey=c4e1bd0e70081aed2a98de5106235fb5`\r\n    _baseOffSet = 209\r\n\r\n\r\n    getResource = async (URL) => {\r\n\r\n    let res = await fetch(URL)\r\n        \r\n    if (!res.ok) {\r\n        throw new Error(`Could not fetch ${URL}, status:${res.status}`)\r\n    }\r\n\r\n    return await res.json()\r\n}\r\n\r\n\r\ngetAllCharacters = async (offset = this._baseOffSet) => {\r\n\r\n    const res = await this.getResource(`${this._apiBase}?limit=9&offset=${offset}&${this._apiKey}`)\r\n    \r\n    return res.data.results.map(this._transformCharacter)\r\n}\r\n\r\ngetCharacter = async (id) => {\r\n    const slash = '/'\r\n    const res = await this.getResource(`${this._apiBase}${slash}${id}?${this._apiKey}`)\r\n\r\n    return this._transformCharacter(res.data.results[0])\r\n}\r\n\r\n_transformCharacter = (char) => {\r\n\r\n    const id = char.id? char.id : null\r\n    return {\r\n        id:id,\r\n        name:char.name,\r\n        description:char.description,\r\n        homepage:char.urls[0].urls,\r\n        wiki:char.urls[1].url,\r\n        thumbnail:char.thumbnail.path + '.' + char.thumbnail.extension,\r\n        comics:char.comics.items\r\n    }\r\n\r\n}\r\n\r\n}\r\n\r\n\r\nexport default MarvelService","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","const ErrorMessage = () => {\r\n\r\n    return (\r\n        <div style = {{textAlign:\"center\", fontSize:'24px'}}>\r\n            <p>\r\n                Sorry!Page not found!\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","import './randomChar.scss';\nimport thor from '../../resources/img/thor.jpeg';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\n\nclass RandomChar extends Component {\n    \n\n    state = {\n        char:{},\n        loading:true,\n        error:false\n    }\n\n    marvelService = new MarvelService()\n\n    \n\n    componentDidMount() {\n\n        this.updateChar()\n     /*   const this.timerID = setInterval(this.updateChar,3000) */\n\n    }\n\n    /* componentWillUnmount(this.timerID) */\n\n    \n\n    onCharLoaded = (char) => {\n\n    if(!char.description) {char.description = 'Sorry! No info about this character.'}\n    if (char.description.length) {\n    let about = char.description.split(' ')\n    \n    if(about.length>32) {\n        about = about.slice(0,about.length - 12)\n        about.push('...')\n        char.description = about.join(' ')\n    }\n    }\n\n\n    this.setState({\n        char,\n        loading:false,\n        error:false})\n\n    }\n\n\n    onError = () => {\n        this.setState({\n            loading:false,\n            error:true}\n        )\n    }\n\n\n    updateChar = () => {\n\n        this.setState({\n            loading:true\n        })\n\n        const id = Math.floor(Math.random() * Math.max(1011400 - 1011000) + 1011000)\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n\n    render() {\n\n        const {char,loading,error} = this.state\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char = {char}/> : null\n        return (\n            \n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\">\n                        <div onClick={this.updateChar} className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n   \n}\n\nconst View = ({char}) => {\n\n    const {name,description,homepage,wiki,thumbnail} = char\n\n    let style = ''\n\n    const change = () => {\n        if (thumbnail === \n            \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" ) {\n    \n                style = 'contain'\n\n                return style   \n            }\n    }\n    \n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} style = {{objectFit:change()}} alt=\"Random character\" className=\"randomchar__img\"/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href=\"#\" className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href=\"#\" className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n\n    }\n\nexport default RandomChar;\n","import './charList.scss';\nimport { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport PropTypes from 'prop-types';\n\n\nclass CharList extends Component {\n\n\n    state = {\n    chars: [],\n    loading:true,\n    error:false,\n    newItemLoading:false,\n    offset:210,\n    charsEnded:false\n    }\n\n\n    marvelService = new MarvelService()\n\n\n    componentDidMount() {\n\n        this.onRequest()\n        \n    }\n\n    onRequest = (offset) => {\n        this.onCharsListLoading()\n        this.marvelService.getAllCharacters(offset)\n        .then(this.onCharsLoaded)\n        .catch(this.onError)\n        \n    }\n\n\n    onError = () => {\n        this.setState(\n        {\n        loading:false,\n        error:true\n        }\n        )\n    }\n\n    onCharsLoaded = (newCharList) => {\n\n        let ended = false\n        if (newCharList.length <9) {\n\n            ended = true\n        }\n\n        this.setState(({offset,chars})=>({\n            chars:[...chars,...newCharList],\n            loading:false,\n            newItemLoading:false,\n            offset:offset + 9,\n            charsEnded:ended\n            \n\n        }))  \n    }\n\n    onCharsListLoading = () => {\n        this.setState({newItemLoading:true})\n    }\n    \n    \n\n    render() {\n\n    const {chars,loading,error,offset,newItemLoading,charsEnded} = this.state\n\n    const contentChars = chars.map((item)=>{\n    const {name,thumbnail} = item\n    let style = ''\n\n    const change = () => {\n        if (thumbnail === \n            \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" ) {\n                style = 'fill'\n                return style\n    }\n    }\n\n    return (\n\n        <li  \n        onClick={()=>this.props.onCharSelected(item.id)}\n        key={item.id} className=\"char__item\">\n        <img style = {{objectFit:change()}}  src={thumbnail} alt=\"abyss\"/>\n        <div className=\"char__name\">{name}</div>\n    </li>   \n    )\n    });\n\n\n\n    const contentSpinners  = loading ? [...Array(8)].map((item,i)=>(\n        <Spinner key={i}/>\n    )) : null\n\n    const contentErrors = error ? [...Array(8)].map((item,i)=>(\n        <ErrorMessage key={i}/>\n    )) : null\n\n    \n    const contentToShow = !(loading || error) ? contentChars : null\n\n    const buttonContent = newItemLoading ? 'Wait...' : 'Load more'\n\n    return (\n\n        <div className=\"char__list\">\n            <ul  className=\"char__grid\">\n            {contentErrors}\n            {contentSpinners}    \n            {contentToShow}\n            </ul>\n            <button onClick={() => this.onRequest(offset)} \n                className=\"button button__main button__long\"\n                disabled = {newItemLoading}\n                style ={{'display':charsEnded? 'none' : 'block'}}>\n                <div className=\"inner\">{buttonContent}</div>\n            </button>\n        </div>\n    )\n    }\n    }\n\n    CharList.propTypes = {\n        onCharSelected:PropTypes.func\n    }\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import './charInfo.scss';\nimport thor from '../../resources/img/thor.jpeg';\nimport { Component } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton'\nimport MarvelService from '../../services/MarvelService';\nimport PropTypes from 'prop-types';\n\n\nclass CharInfo extends Component {\n\n    state = {\n        char:null,\n        error:false,\n        loading:false\n    }\n\n    marvelService = new MarvelService()\n\n    componentDidMount() {\n        this.updateChar()\n        \n    }\n\n    componentDidUpdate(prevProps) {\n\n        if (this.props.charId !== prevProps.charId ) { \n            this.updateChar()\n        }\n    }\n\n    componentDidCatch(err,info) {\n        console.log(err,info)\n        this.setState({error:true})\n    }\n\n    updateChar = () => {\n\n    const {charId} = this.props\n    if(!charId) {\n        return\n    }\n\n    this.onCharLoading()\n\n    this.marvelService.getCharacter(charId)\n    .then(this.onCharLoaded)\n    .catch(this.onError)\n\n    }\n\n    onCharLoading = () => {\n        this.setState({loading:true})\n    }\n\n\n    onCharLoaded = (char) => {\n\n        this.setState({char:char,loading:false})\n        \n    }\n\n    onError = () => {\n        this.setState({error:true})\n    }\n\n    render() {\n\n        const {char,loading,error} = this.state\n\n        const skeleton = char || loading || error ? null : <Skeleton/>\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char = {char}/> : null\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n    \n}\n\nconst View = ({char}) => {\n\n    const {name,description,wiki,thumbnail,comics} = char\n\n    const content = comics.length === 0 ? 'No comics about this character was found' : comics.slice(0,9).map((item,i)=>{\n                \n        return (\n            <li key = {i} className=\"char__comics-item\">\n                {item.name}\n            </li>\n            )\n        });\n        \n        \n\n    const change = () => {\n        let style = ''\n        if (thumbnail === \n            \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" ) {\n    \n                style = 'contain'\n\n                return style   \n            }\n    }\n\n    return (\n    <>\n    <div className=\"char__basics\">\n                <img style = {{objectFit:change()}} src={thumbnail} alt={name}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href=\"#\" className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n\n            {content}\n\n            </ul>\n        </>\n    )\n\n}\n\nCharInfo.propTypes = {\n    charId:PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\"\r\n\r\nclass ErrorBoundary extends Component {\r\n\r\n    state = {\r\n        error:false\r\n    }\r\n\r\n    componentDidCatch(error,errorInfo) {\r\n        console.log(error)\r\n        console.log(errorInfo)\r\n        this.setState({error:true})\r\n\r\n    }\r\n\r\n    render () {\r\n\r\n        if (this.state.error) {\r\n\r\n            return (\r\n                <h2>\r\n                    Something gone wrong\r\n                </h2>\r\n            )\r\n        }\r\n\r\n        return (\r\n            this.props.children\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundary","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport decoration from '../../resources/img/vision.png';\n\nimport { Component } from \"react\";\n\n\n\n\nclass App extends Component {\n\n    state = {\n        selectedChar:null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({selectedChar:id})\n    }\n\n    \n\n    render () {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                <ErrorBoundary>\n                    <RandomChar/>\n                </ErrorBoundary>\n                <div className=\"char__content\">\n                    <ErrorBoundary>\n                        <CharList onCharSelected = {this.onCharSelected}/>\n                    </ErrorBoundary>\n                    <ErrorBoundary>\n                        <CharInfo charId = {this.state.selectedChar}/>\n                    </ErrorBoundary>\n                </div>\n                <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n            </main>\n            </div>\n        )\n    }\n    \n}\n\n\n\nexport default App;\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}